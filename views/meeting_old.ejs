<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Meeting Availability</title>
    <link rel="stylesheet" href="/styles.css">
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.33/moment-timezone-with-data.min.js"></script>
</head>
<body>
    <h1>Meeting Availability</h1>
    <div id="venn-diagram"></div>
    <div id="participants-list">
        <h2>Participants</h2>
        <ul>
            <% participants.forEach(function(participant) { %>
                <li><%= participant.name %> (<%= participant.timezone %>): <%= participant.start_time %> - <%= participant.end_time %></li>
            <% }); %>
        </ul>
    </div>

    <!-- Add this right after the <h1> tag in views/meeting.ejs -->
<div id="share-link">
    <p>Share this link with others to add their availability:</p>
    <input type="text" readonly value="<%= `${process.env.BASE_URL || 'http://localhost:3000'}/join/${meetingId}` %>" id="share-url">
    <button onclick="copyShareLink()">Copy Link</button>
</div>


    <script>
        const participants = <%- JSON.stringify(participants) %>;
        
        // Convert times to minutes since midnight
        function timeToMinutes(time) {
            const [hours, minutes] = time.split(':').map(Number);
            return hours * 60 + minutes;
        }

        // Prepare data for Venn diagram
        const sets = participants.map(p => ({
            name: p.name,
            startTime: timeToMinutes(p.start_time),
            endTime: timeToMinutes(p.end_time)
        }));

        // Find overlapping time
        const overlapStart = Math.max(...sets.map(s => s.startTime));
        const overlapEnd = Math.min(...sets.map(s => s.endTime));

        // Create SVG
        const width = 600;
        const height = 400;
        const svg = d3.select("#venn-diagram")
            .append("svg")
            .attr("width", width)
            .attr("height", height);

        // Draw circles
        const colors = d3.schemeCategory10;
        sets.forEach((set, i) => {
            svg.append("circle")
                .attr("cx", width / 2)
                .attr("cy", height / 2)
                .attr("r", (set.endTime - set.startTime) / 2)
                .attr("fill", colors[i])
                .attr("fill-opacity", 0.5)
                .attr("stroke", colors[i])
                .attr("stroke-width", 2);
        });

        // Draw overlap
        if (overlapEnd > overlapStart) {
            svg.append("circle")
                .attr("cx", width / 2)
                .attr("cy", height / 2)
                .attr("r", (overlapEnd - overlapStart) / 2)
                .attr("fill", "yellow")
                .attr("fill-opacity", 0.5)
                .attr("stroke", "black")
                .attr("stroke-width", 2);

            svg.append("text")
                .attr("x", width / 2)
                .attr("y", height / 2)
                .attr("text-anchor", "middle")
                .attr("dominant-baseline", "central")
                .text(`Overlap: ${Math.floor(overlapStart / 60)}:${overlapStart % 60} - ${Math.floor(overlapEnd / 60)}:${overlapEnd % 60}`);
        }
    </script>

    <!-- Add this script at the end of the file -->
<script>
function copyShareLink() {
    const shareUrl = document.getElementById('share-url');
    shareUrl.select();
    document.execCommand('copy');
    alert('Link copied to clipboard!');
}
</script>
</body>
</html>